@model AsyncDemoModel
@{
    ViewData["Title"] = "Concurrent Demo";
}

<div class="text-center">
    <h7 class="display-7">Sync, Async, Concurrent, controller call with mock</h7>
</div>

<div id="overlay">
  <div class="cv-spinner">
    <span class="spinner"></span>
  </div>
</div>
<div id="errorMessageDiv"></div>
<div class="container">
    <div class="row">
        <div class="col-lg">
            <button id="buttonSync" type="button" onclick='sendServerRequest("GetBreakfastSync")'>Sync</button>
            <div id="GetBreakfastSync"></div>
        </div>
        <div class="col-lg">
            <button id="buttonAsyncSimple" type="button" onclick='sendServerRequest("GetBreakfastAsync")'>Async but not concurrent</button>
            <div id="GetBreakfastAsync"></div>
        </div>
        <div class="col-lg">
            <button id="buttonAsync" type="button" onclick='sendServerRequest("GetBreakfastConcurrent")'>Concurrent</button>
            <div id="GetBreakfastConcurrent"></div>
        </div>
        <div class="col-lg">
            <button id="buttonOptimized" type="button" onclick='sendServerRequest("GetBreakfastConcurrentOptimized")'>Concurrent optimized</button>
            <div id="GetBreakfastConcurrentOptimized"></div>
        </div>
        <div class="col-lg">
            <button id="buttonOptimizedException" type="button" onclick='sendServerRequest("GetBreakfastConcurrentOptimizedException")'>Optimized with exception</button>
            <div id="GetBreakfastConcurrentOptimizedException"></div>
        </div>
        <div class="col-lg">
            <button id="buttonOptimizedAll" type="button" onclick='sendServerRequest("GetBreakfastConcurrentOptimizedAll")'>Optimized All</button>
            <div id="GetBreakfastConcurrentOptimizedAll"></div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        var tableHtml="";        
        var MethodName="";
        function fillTable(value){
            var result ="";                    
            result+="<tr><td>"+value+"</td><tr>";
            tableHtml += result;
        }

        function fnFillTable(method, tableHtml) {
                $("#" + method).html(tableHtml);
            }

        function sendServerRequest(method) {
            MethodName = method;
            var information = {};
            information.name = method;
            var stringData = JSON.stringify(information);
            tableHtml = "";
            tableHtml += "<table><thead><tr><th>Output Message</th></tr></thead><tbody>";
            $.ajax({
                data: stringData,
                type: "POST",
                url: '@Url.Action("GetBreakfast", "AsyncDemo")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    console.log(data);
                    data.outputMessages.forEach(fillTable);
                    tableHtml += "</tbody></table>";
                    fnFillTable(MethodName, tableHtml);
                },
                error: function (error) {

                    console.log(error);

                    tableHtml = "error.responseText: " + error.responseText;
                    $("#errorMessageDiv").html(tableHtml);
                    $("#overlay").fadeOut(100);
                }
            }).done(function () {
                        setTimeout(
                                    function () {
                                        $("#overlay").fadeOut(100);
                                    }, 5000);
            });
                
        }    

        jQuery(function ($) {
            $(document).ajaxSend(function () {$("#overlay").fadeIn(300);});
        });                       
                   
    </script>
}